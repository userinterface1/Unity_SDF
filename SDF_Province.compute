// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain3

#define WIDTH 8192
#define HEIGHT 5734

Texture2D<float4> Input;
RWTexture2D<float4> Output;

[numthreads(16,16,1)]
void CSMain3 (uint3 id : SV_DispatchThreadID)
{
    int2 left = id.xy + int2(-1, 0);
    int2 right = id.xy + int2(1, 0);
    int2 up = id.xy + int2(0, 1);
    int2 down = id.xy + int2(0, -1);
    
    int2 left_up = left + up;
    int2 left_down = left + down;
    int2 right_up = right + up;
    int2 right_down = right + down;
    
    if (left.x >= 0 && left.y >= 0 && left.x < WIDTH && left.y < HEIGHT && length(Input[id.xy] - Input[left]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else if (right.x >= 0 && right.y >= 0 && right.x < WIDTH && right.y < HEIGHT && length(Input[id.xy] - Input[right]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else if (down.x >= 0 && down.y >= 0 && down.x < WIDTH && down.y < HEIGHT && length(Input[id.xy] - Input[down]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else if (up.x >= 0 && up.y >= 0 && up.x < WIDTH && up.y < HEIGHT && length(Input[id.xy] - Input[up]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else if (left_up.x >= 0 && left_up.y >= 0 && left_up.x < WIDTH && left_up.y < HEIGHT && length(Input[id.xy] - Input[left_up]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else if (left_down.x >= 0 && left_down.y >= 0 && left_down.x < WIDTH && left_down.y < HEIGHT && length(Input[id.xy] - Input[left_down]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else if (right_up.x >= 0 && right_up.y >= 0 && right_up.x < WIDTH && right_up.y < HEIGHT && length(Input[id.xy] - Input[right_up]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else if (right_down.x >= 0 && right_down.y >= 0 && right_down.x < WIDTH && right_down.y < HEIGHT && length(Input[id.xy] - Input[right_down]) > 0.1f)
    {
        Output[id.xy] = float4(0, 0, 0, 1);
    }
    else 
    {
        Output[id.xy] = float4(1, 1, 1, 1);
    }
}
